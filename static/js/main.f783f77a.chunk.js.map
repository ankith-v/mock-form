{"version":3,"sources":["components/Head.js","components/Body.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Head","padding","alignContent","flexDirection","height","display","margin","maxW","src","process","objectFit","alt","maxInlineSize","paddingBottom","marginBottom","maxWidth","textAlign","fontSize","borderStyle","borderColor","borderWidth","borderRadius","borderTopColor","borderTopWidth","paddingTop","color","Body","handleSubmit","values","console","log","axios","post","then","response","initialValues","name","email","phone","pageURL","about","onSubmit","data","style","type","placeholder","as","Input","colorScheme","size","maxHeight","JSON","stringify","href","Form","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f783f77a.chunk.js","sourcesContent":["import { Flex, Text, Box, Image } from \"@chakra-ui/react\";\r\n\r\nconst Head = () => {\r\n  return (\r\n    <div>\r\n      <Box padding=\"3\" alignContent=\"center\">\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          display=\"table\"\r\n          margin=\"0 auto\"\r\n          maxW=\"600\"\r\n        >\r\n          <Image\r\n            src={process.env.PUBLIC_URL + \"/FundingXLogo.png\"}\r\n            objectFit=\"contain\"\r\n            alt=\"logo\"\r\n            maxInlineSize=\"100%\"\r\n            paddingBottom=\"1\"\r\n            marginBottom=\"2\"\r\n          />\r\n          <Text\r\n            maxWidth=\"600\"\r\n            textAlign=\"left\"\r\n            fontSize=\"14\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"lightgrey\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"15\"\r\n            borderTopColor=\"#f89191\"\r\n            borderTopWidth=\"10px\"\r\n          >\r\n            <Box padding=\"4\" paddingTop=\"2\">\r\n              <Text fontSize=\"28\">Web Development Task</Text>\r\n              <Text paddingBottom=\"3\" paddingTop=\"2\">\r\n                Welcome to FundingX!\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                To become a part of our Web Development Team, please complete\r\n                the task before the deadline mentioned.\r\n              </Text>\r\n\r\n              <Text paddingBottom=\"3\">\r\n                No task submissions will be entertained after the deadline\r\n              </Text>\r\n\r\n              <Text paddingBottom=\"3\">\r\n                TASK - Replicate this Google form which you are looking at.\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                You may use HTML,CSS or ReactJs. Preference will be given to one\r\n                using ReactJs and able to send JSON file to a URL.\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                If you like, you may enhance the looks of the page according to\r\n                you.\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                Host this page on GitHub pages or any hosting service you like\r\n                and paste link in the form.\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                The tasks given are for understanding how well you are equipped\r\n                with the skills.\r\n              </Text>\r\n              <Text paddingBottom=\"3\">\r\n                Deadline for submission- July 31, 4:00 p.m.\r\n              </Text>\r\n              <Text color=\"red.400\" padding=\"2\">\r\n                * Required\r\n              </Text>\r\n            </Box>\r\n          </Text>\r\n        </Flex>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Head;\r\n","import { Flex, Button } from \"@chakra-ui/react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { Box, Input } from \"@chakra-ui/react\";\r\n\r\n//Enter url of choice that accepts JSON post below\r\nconst url = \"https://xyz.com\";\r\n\r\nconst Body = () => {\r\n  const handleSubmit = (values) => {\r\n    console.log(values);\r\n    axios.post(url, values).then((response) => console.log(response));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex flexDirection=\"column\" height=\"100%\" margin=\"0 auto\" maxW=\"600\">\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            pageURL: \"\",\r\n            about: \"\",\r\n          }}\r\n          onSubmit={(data) => {\r\n            console.log(data);\r\n          }}\r\n        >\r\n          {({ values }) => (\r\n            <Form>\r\n              <Box\r\n                borderStyle=\"solid\"\r\n                borderColor=\"lightgrey\"\r\n                borderWidth=\"thin\"\r\n                padding=\"8\"\r\n                borderRadius=\"2xl\"\r\n                margin=\"3\"\r\n                marginBottom=\"0\"\r\n              >\r\n                <label>\r\n                  Name\r\n                  <inline style={{ color: \"red\" }}>*</inline>\r\n                </label>\r\n                <Field\r\n                  name=\"name\"\r\n                  type=\"input\"\r\n                  placeholder=\"Your Answer\"\r\n                  as={Input}\r\n                />\r\n              </Box>\r\n              <Box\r\n                borderStyle=\"solid\"\r\n                borderColor=\"lightgrey\"\r\n                borderWidth=\"thin\"\r\n                padding=\"8\"\r\n                borderRadius=\"2xl\"\r\n                margin=\"3\"\r\n                marginBottom=\"0\"\r\n              >\r\n                <label>\r\n                  Email Id\r\n                  <inline style={{ color: \"red\" }}>*</inline>\r\n                </label>\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"input\"\r\n                  placeholder=\"Your Answer\"\r\n                  as={Input}\r\n                />\r\n              </Box>\r\n              <Box\r\n                borderStyle=\"solid\"\r\n                borderColor=\"lightgrey\"\r\n                borderWidth=\"thin\"\r\n                padding=\"8\"\r\n                borderRadius=\"2xl\"\r\n                margin=\"3\"\r\n                marginBottom=\"0\"\r\n              >\r\n                <label>\r\n                  Phone No.\r\n                  <inline style={{ color: \"red\" }}>*</inline>\r\n                </label>\r\n                <Field\r\n                  name=\"phone\"\r\n                  type=\"input\"\r\n                  placeholder=\"Your Answer\"\r\n                  as={Input}\r\n                />\r\n              </Box>\r\n              <Box\r\n                borderStyle=\"solid\"\r\n                borderColor=\"lightgrey\"\r\n                borderWidth=\"thin\"\r\n                padding=\"8\"\r\n                borderRadius=\"2xl\"\r\n                margin=\"3\"\r\n                marginBottom=\"0\"\r\n              >\r\n                <label>\r\n                  Page URL\r\n                  <inline style={{ color: \"red\" }}>*</inline>\r\n                </label>\r\n                <Field\r\n                  name=\"pageURL\"\r\n                  type=\"input\"\r\n                  placeholder=\"Your Answer\"\r\n                  as={Input}\r\n                />\r\n              </Box>\r\n              <Box\r\n                borderStyle=\"solid\"\r\n                borderColor=\"lightgrey\"\r\n                borderWidth=\"thin\"\r\n                padding=\"8\"\r\n                borderRadius=\"2xl\"\r\n                margin=\"3\"\r\n                marginBottom=\"0\"\r\n              >\r\n                <label>\r\n                  What is FundingX about?\r\n                  <inline style={{ color: \"red\" }}>*</inline>\r\n                  <p style={{ fontSize: 13 }}>\r\n                    Just a one liner as to what you think we do.\r\n                  </p>\r\n                </label>\r\n                <Field\r\n                  name=\"about\"\r\n                  type=\"input\"\r\n                  placeholder=\"Your Answer\"\r\n                  as={Input}\r\n                />\r\n              </Box>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                size=\"md\"\r\n                maxWidth=\"90\"\r\n                maxHeight=\"8\"\r\n                margin=\"3\"\r\n                type=\"submit\"\r\n                onSubmit={handleSubmit(values)}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <p> On submit, below JSON will be submitted to xyz.com</p>\r\n              <pre>{JSON.stringify(values, null, 2)}</pre>\r\n              <p>\r\n                Find the source code at :{\" \"}\r\n                <a\r\n                  href=\"https://github.com/ankith-v/mock-form\"\r\n                  style={{ color: \"blue\" }}\r\n                >\r\n                  https://github.com/ankith-v/mock-form\r\n                </a>\r\n              </p>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\nexport default Body;\r\n","import Head from \"./Head\";\r\nimport Body from \"./Body\";\r\n\r\nconst Form = () => {\r\n  return (\r\n    // <Center>\r\n    <>\r\n      <Head />\r\n      <Body />\r\n    </>\r\n    // </Center>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import Form from \"./components/Form\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  return (\n    <div>\n      <ChakraProvider>\n        <Form />\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}